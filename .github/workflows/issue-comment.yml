name: 이슈 커멘트 자동 등록

on:
  issues:
    types: [opened]

jobs:
  auto-issue-comment:
    runs-on: ubuntu-latest

    steps:
      - name: 이슈 정보 분석
        id: issue-analysis
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const issueTitle = issue.title.toLowerCase();
            const issueBody = issue.body ? issue.body.toLowerCase() : '';
            const author = issue.user.login;

            // 이슈 유형 분석
            let issueType = 'general';
            let priority = 'medium';
            let template = '';

            if (issueTitle.includes('bug') || issueBody.includes('error') || issueBody.includes('문제')) {
              issueType = 'bug';
              priority = 'high';
              template = `
              ## 🐛 버그 신고 접수
              
              안녕하세요 @${author}님, 버그 신고해주셔서 감사합니다!
              
              ### 📋 버그 처리 절차
              1. **재현 확인**: 개발팀에서 버그를 재현해보겠습니다
              2. **원인 분석**: 근본 원인을 파악합니다
              3. **수정 계획**: 수정 방법과 일정을 알려드립니다
              4. **테스트**: 충분한 테스트 후 배포합니다
              
              ### ⏰ 예상 처리 시간
              - **심각도 높음**: 24시간 이내
              - **심각도 보통**: 3-5일 이내
              - **심각도 낮음**: 1-2주 이내
              
              ### 📝 추가 정보 요청
              더 빠른 처리를 위해 다음 정보를 추가로 제공해주시면 도움이 됩니다:
              - 운영체제 및 브라우저 정보
              - 에러 로그 (있는 경우)
              - 재현 단계의 상세 설명
              - 스크린샷 (가능한 경우)
              `;
            } else if (issueTitle.includes('feature') || issueTitle.includes('기능') || issueBody.includes('추가')) {
              issueType = 'feature';
              priority = 'medium';
              template = `
              ## ✨ 기능 요청 접수
              
              안녕하세요 @${author}님, 새로운 기능 제안해주셔서 감사합니다!
              
              ### 📋 기능 검토 절차
              1. **요구사항 분석**: 제안해주신 기능을 자세히 검토합니다
              2. **기술적 검토**: 구현 가능성과 방법을 검토합니다
              3. **우선순위 결정**: 로드맵에 따라 우선순위를 결정합니다
              4. **개발 계획**: 개발 일정을 수립합니다
              
              ### 🤔 검토 항목
              - 사용자 가치와 필요성
              - 기술적 구현 복잡도
              - 기존 기능과의 호환성
              - 유지보수 비용
              
              ### 📅 검토 일정
              약 1-2주 내에 검토 결과를 알려드리겠습니다.
              `;
            } else if (issueTitle.includes('question') || issueTitle.includes('질문') || issueTitle.includes('도움')) {
              issueType = 'question';
              priority = 'low';
              template = `
              ## ❓ 질문 접수
              
              안녕하세요 @${author}님, 질문해주셔서 감사합니다!
              
              ### 📚 도움말 리소스
              먼저 다음 리소스들을 확인해보세요:
              - [프로젝트 README](../README.md)
              - [API 문서](../docs/)
              - [자주 묻는 질문](../docs/faq.md) (있는 경우)
              
              ### 💬 답변 절차
              1. **질문 검토**: 질문 내용을 파악합니다
              2. **답변 준비**: 명확하고 도움이 되는 답변을 준비합니다
              3. **후속 지원**: 추가 질문이 있으면 언제든 문의하세요
              
              ### ⏰ 응답 시간
              일반적으로 1-3일 내에 답변해드립니다.
              `;
            } else if (issueTitle.includes('documentation') || issueTitle.includes('문서')) {
              issueType = 'documentation';
              priority = 'low';
              template = `
              ## 📖 문서 관련 이슈 접수
              
              안녕하세요 @${author}님, 문서 개선을 위한 제안 감사합니다!
              
              ### 📝 문서 개선 절차
              1. **현재 문서 검토**: 지적해주신 부분을 확인합니다
              2. **개선 방안 검토**: 더 나은 문서화 방법을 모색합니다
              3. **문서 업데이트**: 개선된 문서를 작성합니다
              4. **검토 및 배포**: 최종 검토 후 업데이트합니다
              
              ### 🎯 문서 품질 목표
              - 명확성: 이해하기 쉬운 설명
              - 완전성: 필요한 모든 정보 포함
              - 최신성: 항상 최신 상태 유지
              `;
            }

            return {
              issueType,
              priority,
              template,
              author
            };

      - name: 자동 댓글 등록
        uses: actions/github-script@v6
        with:
          script: |
            const analysisResult = ${{ steps.issue-analysis.outputs.result }};

            const welcomeComment = `
            ${analysisResult.template}

            ---

            ### 🏷️ 이슈 분류
            - **유형**: \`${analysisResult.issueType}\`
            - **우선순위**: \`${analysisResult.priority}\`

            ### 📞 연락처
            추가 문의사항이 있으시면 언제든 댓글로 남겨주세요!

            *이 댓글은 자동으로 생성되었습니다.* 🤖
            `;

            await github.rest.issues.createComment({
              issue_number: context.payload.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: welcomeComment
            });
